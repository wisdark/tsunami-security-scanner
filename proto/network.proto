/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Data models for describing network related information.
syntax = "proto3";

package tsunami.proto;

option java_multiple_files = true;
option java_outer_classname = "NetworkProtos";
option java_package = "com.google.tsunami.proto";
option go_package = "github.com/google/tsunami-security-scanner/proto";

// The address family of an IP address.
enum AddressFamily {
  ADDRESS_FAMILY_UNSPECIFIED = 0;
  IPV4 = 4;
  IPV6 = 6;
}

// The IP address of a networking device.
message IpAddress {
  // The family of the IP address.
  AddressFamily address_family = 1;

  // A human-readable representation of the IP address, e.g. 127.0.0.1 for IPV4
  // and 2001:db8:0:1234:0:567:8:1 for IPV6.
  string address = 2;
}

// The port that a network service listens to.
message Port {
  uint32 port_number = 1;
}

// The hostname of a networking device.
message Hostname {
  string name = 1;
}

// A classification of an endpoint for a network device.
message NetworkEndpoint {
  enum Type {
    TYPE_UNSPECIFIED = 0;

    // The network endpoint is represented by an IP address.
    IP = 1;

    // The network endpoint is represented by IP address and port pair.
    IP_PORT = 2;

    // The network endpoint is represented by a hostname.
    HOSTNAME = 3;

    // The network endpoint is represented by a hostname and port pair.
    HOSTNAME_PORT = 4;

    // The network endpoint is represented by an IP address and hostname.
    IP_HOSTNAME = 5;

    // The network endpoint is represented by an IP address, hostname and port.
    IP_HOSTNAME_PORT = 6;
  }

  // Type of the network endpoint.
  Type type = 1;

  // Optional IP address of a network endpoint. Must be specified when Type is
  // IP or IP_PORT.
  IpAddress ip_address = 2;

  // Optional port of a network endpoint. Must be specified when Type is IP_PORT
  // or HOSTNAME_PORT.
  Port port = 3;

  // Optional hostname of a network endpoint. Must be specified when Type is
  // HOSTNAME or HOSTNAME_PORT.
  Hostname hostname = 4;
}

// The transport layer protocols.
enum TransportProtocol {
  TRANSPORT_PROTOCOL_UNSPECIFIED = 0;

  TCP = 1;
  UDP = 2;
  SCTP = 3;
}
